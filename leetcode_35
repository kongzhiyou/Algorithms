给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。

你可以假设数组中无重复元素。

示例 1:

输入: [1,3,5,6], 5
输出: 2


//题解： 使用二分查找降低时间复杂度O(logn)

#include <iostream>
#include <vector>
using namespace std;
int searchInsert(vector<int>& nums, int target) {
    int p = 0,q = nums.size()-1,pre = 0;
    while(p<=q){
        pre = (p+q)/2;
        if(target>nums[pre]){
            p = pre+1;
        }else if(target==nums[pre]){
            return pre;
        }else{
            q = pre-1;
        }
    }
    return p;
}
int main()
{
    vector<int> nums;
    int value;
    while(cin>>value){
        if(value!=-1){
            nums.push_back(value);
        }else{
            break;
        }
    }
    int t = searchInsert(nums,3);
    cout<<t;
    return 0;
}
